# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def mergeTwoLists(self, l1: ListNode, l2: ListNode) -> ListNode:

        if l1 is None and l2 is None:
            return l1
        elif l1 is None or l2 is None:
            l1 = ListNode(0)
            return l1
        elif l1.next is None and l2.next is None:
            L3Next = ListNode(l2.val)
            L3 = ListNode(l1.val, L3Next)
        # elif l1
        
        
        
        L3Next = ListNode(l2.val)
        L3 = ListNode(l1.val, L3Next)
        head = L3
        L3 = L3.next

        l1Pointer = l1.next
        l2Pointer = l2.next
        
        while l1Pointer is not None:
            second = ListNode(l2Pointer.val)
            first = ListNode(l1Pointer.val, second)
            
            L3.next = first
            L3 = L3.next
            L3 = L3.next

            l1Pointer = l1Pointer.next
            l2Pointer = l2Pointer.next
            
        return head